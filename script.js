const { createApp, ref, computed, watch, onMounted } = Vue;

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const FOLDERS_STRUCTURE_FILE = 'folders_structure.json';
const RECIPIENTS_FILE = 'recipients.json';
const SENDER_PROFILE_FILE = 'sender_profile.json';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Dropbox
let dropbox;
let isDropboxInitialized = false;

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è OAuth
const DROPBOX_CLIENT_ID = 's0m2ifpklek27v7';
const DROPBOX_CLIENT_SECRET = '0fgerjun66hpztg';
const TOKEN_STORAGE_KEY = 'dropbox_tokens';

// –í–∞—à–∏ refresh token –∏ access token (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ curl)
const INITIAL_REFRESH_TOKEN = 'z3DDMYdOJacAAAAAAAAAAYJqZEQdAktNqNzgg2XaBZcnLZzzeY3ALB5ce2mmRrFc';
const INITIAL_ACCESS_TOKEN = 'sl.u.AF2Id1V3HpWyEgmtDLCsGJSEequEFCpCA0NVwsmnvcxkes3zm3mEB8OFpKvDAOQjp1EeKDGuwlphjkv9apQY5JG_m1xnXEKY4pZA4s_fXx5jlBPe-zAQ4nrFe-7_gRTAhHFXXGbGpWqHmdhEQaK3nw221k2XZDKt1SIE9OT_qflTlqo8yGblN7wlCdbMRjfe9DCjVIeMBjGeGxz9YgOcbKaJKKLxgH1mr8c1eafBGar_cVPM0DKDEMiscSgLeeu5C0_x5aXqBeYZ5EEFLGyAjjhYiOfCzCTYBxF5PlbVbfc4XPgaQd8yAW-CNcwkEL--w8OLA_0GJ3yOa3gobYUwvfGo3kGrXvJUguJ6Jk0IYh9MmmNhjR06p01lSAZoV8leXO04pqbLcGAuyzRFa5-g1x214k_rVnFXMNkHIEKGdYEWOkS7G_BLOoL7C8JqDhYZMPLB2HIdoGxNdwpaq9qo0kR1Zj3SH_MxwDwYSKAPu69RMKY6JzpvYTSUcU-z_naPUXSrf6L0t8qKhwU0gEmFAP3Fw3cfkdh4hct-jKf_P9w_gFaLITP0ALqb1EZZcCAdV-hqOhoNk44gXCCAekQM5_pksVn2CxYmyOGII3pFNMDzMrVPDP9tc6QPPWjlWVQFJ6jxJpxoVsYoU_1wG-bkY-GT8yyoqR4OuQFhcpSXExDSc0Rcbd9TMsh74zdiuhlIhRzD_nE4TTf4oBHIFq8B2VQ6pBjh6PK3onD5JIPMMeO0tF6UhgAp29pCYekWgpYT-KCCMEenHGKFPrr6e79o0K4s6ISGhxyXaJ3uQegjmFAozjuPwa2nTkZxsZAbcOeFf1kcpGiAGk8WX7Bt7hnEEmWFpeK0uXBYFRU2NT2qNlv9guUgUDx3-UxL1Hs_gJnT_0SonoOiM1S_AsTJL7KB1sjL1Z4WYioV1-Kc4KPFYbLj1YcsKlID0DW3STV_1__qey3hKd3StTaoo5Qx60Njz96RknRKb39Xa8e4Bhl0el6z814HciLwmGqt-xTR3DRY4VhuJe7iYHAIMndd3XI8I2t64mXcBg-xyaHEgyC2E2xnjhHj2D67a2bfmp3HUKTtkSfKtJPoXDQ1WDThb6fgg_j-GIRb4dZiq-9KUP_p_xZWwGzoRhexhbT5SIuFN0YjjZi0As_iEIY08ZQLY3RNm-bEyZ4KojvSLbSZWrPoBsXMImEiKF_FYsmabhYGApvPZYZHqNeGR0gWXfaV2P9MmtaBWuh0kOZae6OI9PTKuoN9TEZ-qsbNS3d5lIJPmzs4aq4FM1JFuEvkeXM3LjfNV08W';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –≤ localStorage
const saveTokens = (tokens) => {
    localStorage.setItem(TOKEN_STORAGE_KEY, JSON.stringify(tokens));
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ localStorage
const loadTokens = () => {
    const tokens = localStorage.getItem(TOKEN_STORAGE_KEY);
    return tokens ? JSON.parse(tokens) : null;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
const initializeTokens = () => {
    const existingTokens = loadTokens();
    if (!existingTokens) {
        const tokens = {
            access_token: INITIAL_ACCESS_TOKEN,
            refresh_token: INITIAL_REFRESH_TOKEN,
            expires_at: Date.now() + (14340 * 1000) // 4 —á–∞—Å–∞ - 1 –º–∏–Ω—É—Ç–∞
        };
        saveTokens(tokens);
        console.log("‚úÖ –¢–æ–∫–µ–Ω—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è access token —Å –ø–æ–º–æ—â—å—é refresh token
const refreshAccessToken = async (refreshToken) => {
    try {
        console.log("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º access token...");
        
        const response = await fetch('https://api.dropboxapi.com/oauth2/token', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({
                grant_type: 'refresh_token',
                refresh_token: refreshToken,
                client_id: DROPBOX_CLIENT_ID,
                client_secret: DROPBOX_CLIENT_SECRET,
            }),
        });

        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå –û—à–∏–±–∫–∞ HTTP:', response.status, errorText);
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω");
        
        return data.access_token;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error);
        throw error;
    }
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Dropbox —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞
const ensureDropboxInitialized = async () => {
    if (isDropboxInitialized && dropbox) return true;
    
    try {
        console.log("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Dropbox...");
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
        initializeTokens();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
        let tokens = loadTokens();
        
        if (!tokens) {
            throw new Error("–¢–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
        }
        
        console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞...");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ access token (—Å –∑–∞–ø–∞—Å–æ–º –≤ 5 –º–∏–Ω—É—Ç)
        const now = Date.now();
        const tokenExpired = now >= (tokens.expires_at - 300000); // 5 –º–∏–Ω—É—Ç –∑–∞–ø–∞—Å–∞
        
        if (tokenExpired) {
            console.log('üîÑ Access token –∏—Å—Ç–µ–∫ –∏–ª–∏ —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º...');
            const newAccessToken = await refreshAccessToken(tokens.refresh_token);
            tokens.access_token = newAccessToken;
            tokens.expires_at = Date.now() + (14340 * 1000); // 4 —á–∞—Å–∞
            saveTokens(tokens);
            console.log("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω");
        } else {
            console.log("‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω");
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Dropbox —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        dropbox = new Dropbox.Dropbox({
            accessToken: tokens.access_token,
            fetch: window.fetch.bind(window)
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
        try {
            await dropbox.filesListFolder({ path: '' });
            console.log("‚úÖ Dropbox –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ");
        } catch (authError) {
            console.log("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω...");
            const newAccessToken = await refreshAccessToken(tokens.refresh_token);
            tokens.access_token = newAccessToken;
            tokens.expires_at = Date.now() + (14340 * 1000);
            saveTokens(tokens);
            
            // –ü–æ–≤—Ç–æ—Ä–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Dropbox
            dropbox = new Dropbox.Dropbox({
                accessToken: newAccessToken,
                fetch: window.fetch.bind(window)
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
            await dropbox.filesListFolder({ path: '' });
        }
        
        isDropboxInitialized = true;
        console.log("‚úÖ Dropbox –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞");
        return true;
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Dropbox:", error);
        
        // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–∫–µ–Ω –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        try {
            console.log("üîÑ –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Ç–æ–∫–µ–Ω...");
            dropbox = new Dropbox.Dropbox({
                accessToken: INITIAL_ACCESS_TOKEN,
                fetch: window.fetch.bind(window)
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
            await dropbox.filesListFolder({ path: '' });
            
            isDropboxInitialized = true;
            console.log("‚úÖ Dropbox –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º");
            return true;
        } catch (fallbackError) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º:", fallbackError);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (confirm("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Dropbox. –•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?")) {
                location.reload();
            }
            return false;
        }
    }
};
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Dropbox –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞
const safeDropboxRequest = async (requestFn, maxRetries = 2) => {
    let lastError;
    
    for (let attempt = 0; attempt <= maxRetries; attempt++) {
        try {
            // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ Dropbox –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
            await ensureDropboxInitialized();
            
            // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å
            return await requestQueue.add(async () => {
                return await requestFn();
            });
            
        } catch (error) {
            lastError = error;
            console.warn(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å:`, error);
            
            // –î–ª—è 429 –æ—à–∏–±–æ–∫ - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
            if (error.status === 429 && attempt < maxRetries) {
                const delay = Math.pow(2, attempt) * 1000; // –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                console.log(`üîÑ 429 –æ—à–∏–±–∫–∞, –∂–¥–µ–º ${delay}ms –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...`);
                await new Promise(resolve => setTimeout(resolve, delay));
                continue;
            }
            
            if (error.status === 401 && attempt < maxRetries) {
                // –ï—Å–ª–∏ 401 –æ—à–∏–±–∫–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
                console.log("üîÑ 401 –æ—à–∏–±–∫–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞...");
                isDropboxInitialized = false;
                folderCache.clear();
                filesCache.clear();
                continue;
            }
            
            if (attempt === maxRetries) {
                console.error("‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å");
                throw error;
            }
        }
    }
    
    throw lastError;
};
// –û–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è 429 –æ—à–∏–±–æ–∫
const requestQueue = {
    queue: [],
    processing: false,
    
    async add(requestFn) {
        return new Promise((resolve, reject) => {
            this.queue.push({ requestFn, resolve, reject });
            this.process();
        });
    },
    
    async process() {
        if (this.processing || this.queue.length === 0) return;
        
        this.processing = true;
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (500ms)
        await new Promise(resolve => setTimeout(resolve, 500));
        
        const { requestFn, resolve, reject } = this.queue.shift();
        
        try {
            const result = await requestFn();
            resolve(result);
        } catch (error) {
            reject(error);
        } finally {
            this.processing = false;
            this.process();
        }
    }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const checkUserFolder = async (username) => {
    if (!ensureDropboxInitialized()) return false;
    try {
        await dropbox.filesGetMetadata({ 
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}` 
        });
        return true;
    } catch (e) {
        if (e.status === 409) {
            console.log(`–ü–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å`);
            return false;
        }
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–ø–∫–∏:", e);
        throw e;
    }
};

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const registerUser = async (username) => {
    if (!ensureDropboxInitialized()) return;
    try {
        console.log("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", username);
        
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–ø–∫—É "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
        try {
            await dropbox.filesGetMetadata({ 
                path: '/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤' 
            });
            console.log("‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        } catch (e) {
            if (e.status === 409) {
                console.log("üìÅ –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–ø–∫—É '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'");
                await dropbox.filesCreateFolderV2({ 
                    path: '/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                    autorename: false
                });
            } else {
                throw e;
            }
        }
        
        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await dropbox.filesCreateFolderV2({
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}`,
            autorename: false
        });
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
        const defaultStructure = {
            version: "1.0",
            lastUpdated: new Date().toISOString(),
            folders: []
        };

        await dropbox.filesUpload({
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/${FOLDERS_STRUCTURE_FILE}`,
            contents: JSON.stringify(defaultStructure, null, 2),
            mode: { '.tag': 'overwrite' },
            mute: true
        });

        console.log("‚úÖ –§–∞–π–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫ —Å–æ–∑–¥–∞–Ω");
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        await dropbox.filesUpload({
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/recipients.json`,
            contents: JSON.stringify([]),
            mode: { '.tag': 'overwrite' },
            mute: true
        });
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        const defaultProfile = {
            senderPosition: "",
            senderOrganization: "",
            senderName: "",
            isLocked: true
        };
        
        await dropbox.filesUpload({
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/${SENDER_PROFILE_FILE}`,
            contents: JSON.stringify(defaultProfile),
            mode: { '.tag': 'overwrite' },
            mute: true
        });
        
        console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:", username);
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", error);
        if (error.status === 409) {
            throw new Error("–ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º—è –∑–∞–Ω—è—Ç–æ");
        }
        throw error;
    }
};

// –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
const folderCache = new Map();

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
const loadRecipients = async (username) => {
    if (!username) return [];
    
    return await safeDropboxRequest(async () => {
        const response = await dropbox.filesDownload({ 
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/recipients.json` 
        });
        
        let content;
        if (response.result && response.result.fileBlob) {
            content = await response.result.fileBlob.text();
        } else if (response.fileBlob) {
            content = await response.fileBlob.text();
        } else {
            throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Dropbox");
        }
        
        const parsed = JSON.parse(content);
        return Array.isArray(parsed) ? parsed : [];
    }).catch(error => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π:", error);
        
        // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç - —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
        if (error.status === 409) {
            try {
                return safeDropboxRequest(async () => {
                    await dropbox.filesUpload({
                        path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/recipients.json`,
                        contents: JSON.stringify([]),
                        mode: { '.tag': 'overwrite' },
                        mute: true
                    });
                    return [];
                });
            } catch (uploadError) {
                console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π:", uploadError);
            }
        }
        return [];
    });
};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
const saveRecipients = async (username, recipients) => {
    if (!ensureDropboxInitialized()) throw new Error("Dropbox –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
    
    try {
        await dropbox.filesUpload({
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/recipients.json`,
            contents: JSON.stringify(recipients),
            mode: { '.tag': 'overwrite' },
            mute: true
        });
        return true;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π:", error);
        throw error;
    }
};
// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
const loadSenderProfile = async (username) => {
    if (!username) return null;
    
    return await safeDropboxRequest(async () => {
        const response = await dropbox.filesDownload({ 
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/${SENDER_PROFILE_FILE}` 
        });
        
        let content;
        if (response.result && response.result.fileBlob) {
            content = await response.result.fileBlob.text();
        } else if (response.fileBlob) {
            content = await response.fileBlob.text();
        } else {
            throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Dropbox");
        }
        
        return JSON.parse(content);
    }).catch(error => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:", error);
        
        // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –ø—Ä–æ—Ñ–∏–ª—å
        if (error.status === 409) {
            const defaultProfile = {
                senderPosition: "",
                senderOrganization: "", 
                senderName: "",
                isLocked: true
            };
            
            try {
                return safeDropboxRequest(async () => {
                    await saveSenderProfile(username, defaultProfile);
                    return defaultProfile;
                });
            } catch (uploadError) {
                console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:", uploadError);
            }
        }
        return null;
    });
};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
const saveSenderProfile = async (username, profile) => {
    if (!ensureDropboxInitialized()) throw new Error("Dropbox –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
    
    try {
        await dropbox.filesUpload({
            path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/${SENDER_PROFILE_FILE}`,
            contents: JSON.stringify(profile),
            mode: { '.tag': 'overwrite' },
            mute: true
        });
        return true;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:", error);
        throw error;
    }
};

// –ö—ç—à –¥–ª—è —Ñ–∞–π–ª–æ–≤
const filesCache = new Map();

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø–∏—Å–µ–º
const loadAllFiles = async (username) => {
    if (!username) {
        return new Map();
    }
    
    return await safeDropboxRequest(async () => {
        const userRootPath = `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}`;
        
        console.log("üìÇ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ –∏–∑:", userRootPath);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
        let allEntries = [];
        let hasMore = true;
        let cursor = null;
        let requestCount = 0;

        while (hasMore && requestCount < 10) { // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 10 –∑–∞–ø—Ä–æ—Å–æ–≤
            requestCount++;
            console.log(`üìÑ –ó–∞–ø—Ä–æ—Å —Ñ–∞–π–ª–æ–≤ ${requestCount}...`);
            
            let result;
            if (cursor) {
                result = await dropbox.filesListFolderContinue({ cursor });
            } else {
                result = await dropbox.filesListFolder({ 
                    path: userRootPath,
                    recursive: true,
                    limit: 500 // –£–º–µ–Ω—å—à–∞–µ–º –ª–∏–º–∏—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è 429
                });
            }

            if (result.result.entries) {
                allEntries = allEntries.concat(result.result.entries);
                console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${result.result.entries.length}, –≤—Å–µ–≥–æ: ${allEntries.length}`);
            }

            hasMore = result.result.has_more;
            cursor = result.result.cursor;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            if (hasMore) {
                await new Promise(resolve => setTimeout(resolve, 1000));
            }
        }
        
        console.log(`üìä –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${allEntries.length}`);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã –ø–∏—Å–µ–º (–∏—Å–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã)
        const letterFiles = allEntries.filter(entry => 
            entry['.tag'] === 'file' && 
            entry.name.endsWith('.json') && 
            entry.name !== FOLDERS_STRUCTURE_FILE &&
            entry.name !== RECIPIENTS_FILE &&
            entry.name !== SENDER_PROFILE_FILE
        );
        
        console.log("üìÑ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –ø–∏—Å–µ–º:", letterFiles.length);
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø—É—Ç—è–º –ø–∞–ø–æ–∫
        const filesByPath = new Map();
        
        letterFiles.forEach(file => {
            const fullPath = file.path_display;
            // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const relativePath = fullPath
                .replace(`/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/`, '')
                .replace(/\.json$/, '');
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É (—É–±–∏—Ä–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞)
            let folderPath = '';
            if (relativePath.includes('/')) {
                folderPath = relativePath.split('/').slice(0, -1).join('/');
            }
            
            if (!filesByPath.has(folderPath)) {
                filesByPath.set(folderPath, []);
            }
            
            filesByPath.get(folderPath).push({
                id: file.id,
                name: file.name.replace('.json', ''),
                path: relativePath,
                fullPath: file.path_display
            });
        });
        
        console.log("üìÅ –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–æ –ø–æ –ø–∞–ø–∫–∞–º:", filesByPath.size);
        return filesByPath;
        
    }).catch(error => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:", error);
        return new Map();
    });
};

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∑–∞–≥—Ä—É–∑–∫–∏
const showLoading = (message = "–ó–∞–≥—Ä—É–∑–∫–∞...", type = "full") => {
    const loadingEl = type === "full" ? 
        document.getElementById('universalLoading') : 
        document.getElementById('miniLoading');
    
    const messageEl = loadingEl.querySelector('.loading-text');
    messageEl.textContent = message;
    
    loadingEl.style.display = 'flex';
    loadingEl.classList.remove('fade-out');
    loadingEl.classList.add('fade-in');
    
    return {
        hide: () => {
            loadingEl.classList.remove('fade-in');
            loadingEl.classList.add('fade-out');
            setTimeout(() => {
                loadingEl.style.display = 'none';
            }, 300);
        },
        updateMessage: (newMessage) => {
            messageEl.textContent = newMessage;
        }
    };
};
// –ê–Ω–∏–º–∞—Ü–∏—è "–ø–∏—Å—å–º–æ –≤–ª–µ—Ç–∞–µ—Ç –≤ –ø–∞–ø–∫—É"
const animateLetterToFolder = (folderElement, letterElement) => {
    return new Promise((resolve) => {
        // –°–æ–∑–¥–∞–µ–º –ª–µ—Ç–∞—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –ø–∏—Å—å–º–∞
        const flyingLetter = document.createElement('div');
        flyingLetter.innerHTML = 'üìÑ';
        flyingLetter.className = 'letter-flying';
        flyingLetter.style.fontSize = '24px';
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const letterRect = letterElement.getBoundingClientRect();
        const folderRect = folderElement.getBoundingClientRect();
        
        // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (–≥–¥–µ –ø–∏—Å—å–º–æ)
        flyingLetter.style.left = letterRect.left + 'px';
        flyingLetter.style.top = letterRect.top + 'px';
        
        // –ö–æ–Ω–µ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (–≥–¥–µ –ø–∞–ø–∫–∞)
        const targetX = folderRect.left - letterRect.left;
        const targetY = folderRect.top - letterRect.top;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        flyingLetter.style.setProperty('--fly-x', targetX + 'px');
        flyingLetter.style.setProperty('--fly-y', targetY + 'px');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
        document.body.appendChild(flyingLetter);
        
        // –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏ —Ä–µ–∑–æ–ª–≤–∏–º –ø—Ä–æ–º–∏—Å
        setTimeout(() => {
            document.body.removeChild(flyingLetter);
            resolve();
        }, 1000);
    });
};

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
const showLetterLoading = () => showLoading("–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∏—Å—å–º–æ...", "full");
const showSaveLoading = () => showLoading("–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∏—Å—å–º–æ...", "mini");
const showRecipientLoading = () => showLoading("–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è...", "mini");
const showRefreshLoading = () => showLoading("–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...", "mini");
const showEditLoading = () => showLoading("–ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∏—Å—å–º–æ...", "mini");
const showDeleteLoading = () => showLoading("–£–¥–∞–ª—è–µ–º –ø–∏—Å—å–º–æ...", "mini");
const showFolderCreationLoading = () => showLoading("–°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É...", "mini");
const showFolderDeletionLoading = () => showLoading("–£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É...", "mini");

const hideLoading = (modal) => {
    if (modal) modal.hide();
};

const formatDate = (dateString) => {
    if (!dateString) return "";
    const date = new Date(dateString);
    const day = date.getDate();
    const month = date.toLocaleString("ru", { month: "long" });
    const year = date.getFullYear();
    return `"${day}" ${month} ${year} –≥.`;
};

const escapeRegExp = (string) => {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
};

// –°–æ–∑–¥–∞–Ω–∏–µ Vue –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = createApp({
    setup() {
        const user = ref({
            username: null,
            folders: [],
            files: [],
            recipients: [],
            senderProfile: null
        });
        
        // –î–æ–±–∞–≤–∏—Ç—å –∑–∞—â–∏—Ç—É –æ—Ç undefined –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ user.username
        const safeUsername = computed(() => user.value?.username || null);
        const showSuccessNotification = ref(false);
        const isLoadingRecipients = ref(false);
        const showErrorNotification = ref(false);
        const notificationMessage = ref('');
        const recipientSearch = ref('');
        const newRecipient = ref({ name: '', position: '', organization: '' });
        const selectedFolderPath = ref(null);

        const saveFileName = ref(''); // –î–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
        const isEditingExistingFile = ref(false); // –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const currentEditingFile = ref(null); // –¢–µ–∫—É—â–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —Ñ–∞–π–ª
        const showLetterForm = ref(false);
        const showSenderProfileModal = ref(false);
        const senderProfileForm = ref({
            senderPosition: "",
            senderOrganization: "", 
            senderName: "",
            isLocked: true
        });
        const formData = ref({
            currentSelection: null,
            letter: {
                number: "",
                date: new Date().toISOString().split('T')[0],
                recipients: [{ position: "", organization: "", name: "" }],
                objectName: "",
                title: "",
                content: "",
                senderPosition: "",
                senderOrganization: "",
                senderName: ""
            },
            currentPath: "",
            currentFileId: null
        });

        // –í—ã—á–∏—Å–ª—è–µ–º–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª–µ–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        const isSenderLocked = computed(() => {
            return user.value.senderProfile?.isLocked || false;
        });

        const showNotification = (message, type = 'success') => {
            notificationMessage.value = message;
            if (type === 'success') {
                showSuccessNotification.value = true;
                setTimeout(() => {
                    showSuccessNotification.value = false;
                }, 3000);
            } else {
                showErrorNotification.value = true;
                setTimeout(() => {
                    showErrorNotification.value = false;
                }, 5000);
            }
        };

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const loadUserData = async () => {
    if (!user.value.username) return;
    
    try {
        console.log("üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è:", user.value.username);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å 429 –æ—à–∏–±–æ–∫
        console.log("1. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π...");
        const recipients = await loadRecipients(user.value.username);
        
        console.log("2. –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫...");
        const folders = await loadFoldersFromJSON(user.value.username);
        
        console.log("3. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã...");
        const allFiles = await loadAllFiles(user.value.username);
        
        console.log("4. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å...");
        const senderProfile = await loadSenderProfile(user.value.username);
        
        console.log("üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:", {
            –ø–∞–ø–∫–∏: folders.length,
            –ø–æ–ª—É—á–∞—Ç–µ–ª–∏: recipients.length,
            —Ñ–∞–π–ª—ã: allFiles.size,
            –ø—Ä–æ—Ñ–∏–ª—å: senderProfile ? "–∑–∞–≥—Ä—É–∂–µ–Ω" : "–Ω–µ—Ç"
        });
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –∏ –µ—ë –ø–æ–¥–ø–∞–ø–∫–∞—Ö
        const countFilesRecursive = (folder, filesMap) => {
            let totalFiles = 0;
            
            // –§–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
            const currentFiles = filesMap.get(folder.path) || [];
            totalFiles += currentFiles.length;
            
            // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å—á–∏—Ç–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø–æ–¥–ø–∞–ø–∫–∞—Ö
            if (folder.children && folder.children.length > 0) {
                folder.children.forEach(child => {
                    totalFiles += countFilesRecursive(child, filesMap);
                });
            }
            
            return totalFiles;
        };
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–∞–ø–∫–∏ —Å —Ñ–∞–π–ª–∞–º–∏ –∏ —Å—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        const attachFiles = (folderList) => {
            return folderList.map(folder => {
                const files = allFiles.get(folder.path) || [];
                const children = folder.children ? attachFiles(folder.children) : [];
                
                // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ (–≤–∫–ª—é—á–∞—è –ø–æ–¥–ø–∞–ø–∫–∏)
                const totalFilesCount = countFilesRecursive({...folder, children}, allFiles);
                
                return {
                    ...folder,
                    files: files,
                    filesCount: totalFilesCount, // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
                    children: children
                };
            });
        };
        
        user.value.folders = attachFiles(folders);
        user.value.recipients = recipients;
        user.value.files = allFiles.get(formData.value.currentPath) || [];
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å
        if (senderProfile) {
            user.value.senderProfile = senderProfile;
            
            // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            if (senderProfile.isLocked) {
                formData.value.letter.senderPosition = senderProfile.senderPosition || "";
                formData.value.letter.senderOrganization = senderProfile.senderOrganization || "";
                formData.value.letter.senderName = senderProfile.senderName || "";
            }
        }
        
        console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è!");
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error);
        showNotification("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", "error");
    }
};
// –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫—ç—à —Å –≤—Ä–µ–º–µ–Ω–µ–º –∂–∏–∑–Ω–∏
const createCache = (defaultTTL = 300000) => { // 5 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return {
        data: new Map(),
        
        set(key, value, ttl = defaultTTL) {
            this.data.set(key, {
                value,
                expiry: Date.now() + ttl
            });
        },
        
        get(key) {
            const item = this.data.get(key);
            if (!item) return null;
            
            if (Date.now() > item.expiry) {
                this.data.delete(key);
                return null;
            }
            
            return item.value;
        },
        
        delete(key) {
            this.data.delete(key);
        },
        
        clear() {
            this.data.clear();
        }
    };
};

// –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à–∏
const folderCache = createCache(600000); // 10 –º–∏–Ω—É—Ç –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
const filesCache = createCache(300000);  // 5 –º–∏–Ω—É—Ç –¥–ª—è —Ñ–∞–π–ª–æ–≤

// –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const login = async () => {
    const username = prompt("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã):");
    if (!username) return;
    
    if (!/^[a-zA-Z0-9_-]+$/.test(username)) {
        alert("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, _ –∏ -");
        return;
    }
    
    try {
        if (!ensureDropboxInitialized()) return;
        
        const exists = await checkUserFolder(username);
        if (!exists) {
            if (confirm("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ?")) {
                await registerUser(username);
            } else {
                return;
            }
        }
        
        user.value.username = username;
        localStorage.setItem('dbx_username', username);
        await loadUserData();
        instantRefresh();
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ñ–æ—Ä–º—É
        if (user.value.senderProfile) {
            senderProfileForm.value = { ...user.value.senderProfile };
        }
        
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", error);
        alert("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: " + error.message);
    }
};

        // –í—ã—Ö–æ–¥
        const logout = () => {
            user.value = { username: null, folders: [], files: [], recipients: [] };
            formData.value.currentPath = "";
            localStorage.removeItem('dbx_username');
        };

        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏
        const createFolder = async () => {
            await createSubFolder('');
        };

        const deleteFolder = async (path) => {
            if (!confirm(`–£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É "${path.split('/').pop()}" –∏ –í–°–ï –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–≤–∫–ª—é—á–∞—è –ø–∏—Å—å–º–∞)?`)) return;
            
            let loading = null;
            try {
                loading = showFolderDeletionLoading();
                
                // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª—ã –≤ —É–¥–∞–ª—è–µ–º–æ–π –ø–∞–ø–∫–µ
                const allFiles = await loadAllFiles(user.value.username);
                
                // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ –∏ –µ—ë –ø–æ–¥–ø–∞–ø–∫–∞—Ö
                const filesToDelete = [];
                
                const collectFilesFromFolder = (folderPath) => {
                    // –§–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
                    const currentFiles = allFiles.get(folderPath) || [];
                    filesToDelete.push(...currentFiles);
                    
                    // –ò—â–µ–º –ø–æ–¥–ø–∞–ø–∫–∏ –∏ –∏—Ö —Ñ–∞–π–ª—ã
                    const findSubfolders = (folders, targetPath) => {
                        for (let folder of folders) {
                            if (folder.path === targetPath) {
                                // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–æ–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ –ø–æ–¥–ø–∞–ø–æ–∫
                                if (folder.children && folder.children.length > 0) {
                                    folder.children.forEach(child => {
                                        const childFiles = allFiles.get(child.path) || [];
                                        filesToDelete.push(...childFiles);
                                        // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∞–ø–æ–∫
                                        findSubfolders(folder.children, child.path);
                                    });
                                }
                                return true;
                            }
                            if (folder.children && folder.children.length > 0) {
                                if (findSubfolders(folder.children, targetPath)) {
                                    return true;
                                }
                            }
                        }
                        return false;
                    };
                    
                    findSubfolders(user.value.folders, folderPath);
                };
                
                collectFilesFromFolder(path);
                
                console.log(`üóëÔ∏è –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É "${path}" –∏ ${filesToDelete.length} —Ñ–∞–π–ª–æ–≤ –≤–Ω—É—Ç—Ä–∏`);
                
                // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
                for (const file of filesToDelete) {
                    try {
                        const filePath = file.fullPath || `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${user.value.username}/${file.path}.json`;
                        await dropbox.filesDeleteV2({ path: filePath });
                        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${file.name}`);
                    } catch (fileError) {
                        console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª ${file.name}:`, fileError);
                    }
                }
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                const currentFolders = await loadFoldersFromJSON(user.value.username);
                
                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                const removeFolder = (folders, targetPath) => {
                    for (let i = 0; i < folders.length; i++) {
                        if (folders[i].path === targetPath) {
                            // –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É
                            folders.splice(i, 1);
                            return true;
                        }
                        if (folders[i].children && folders[i].children.length > 0) {
                            if (removeFolder(folders[i].children, targetPath)) {
                                return true;
                            }
                        }
                    }
                    return false;
                };
                
                if (!removeFolder(currentFolders, path)) {
                    throw new Error("–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ");
                }
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                await saveFoldersToJSON(user.value.username, currentFolders);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                await loadUserData();
                
                showNotification(`–ü–∞–ø–∫–∞ –∏ ${filesToDelete.length} –ø–∏—Å–µ–º —É–¥–∞–ª–µ–Ω—ã!`);
                
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
                showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É", "error");
            } finally {
                if (loading) {
                    setTimeout(() => loading.hide(), 300);
                }
            }
        };

        const changeFolder = async (path) => {
            console.log("üìÅ –í—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞:", path);
            formData.value.currentPath = path;
            
            // –ü—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏
            const allFiles = await loadAllFiles(user.value.username);
            user.value.files = allFiles.get(path) || [];
        };

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Å—å–º–∞–º–∏
const loadLetter = async (file) => {
    let loading = null;
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        loading = showEditLoading();
        
        const basePath = '/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤';
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∏–∑ –æ–±—ä–µ–∫—Ç–∞ file
        const filePath = file.fullPath || 
            (file.path 
                ? `${basePath}/${user.value.username}/${file.path}.json`
                : `${basePath}/${user.value.username}/${file.name}.json`);
            
        console.log("üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∏—Å—å–º–∞ –ø–æ –ø—É—Ç–∏:", filePath);
        
        const response = await dropbox.filesDownload({ path: filePath });
        
        let content;
        // –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Dropbox
        if (response.result && response.result.fileBlob) {
            content = await response.result.fileBlob.text();
        } else if (response.fileBlob) {
            content = await response.fileBlob.text();
        } else {
            throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Dropbox");
        }
        
        const data = JSON.parse(content);
        formData.value.letter = {
            ...data,
            recipients: data.recipients || [{ position: "", organization: "", name: "" }]
        };
        formData.value.currentFileId = file.id;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        isEditingExistingFile.value = true;
        currentEditingFile.value = file;
        
        // –ü–û–ö–ê–ó–´–í–ê–ï–ú –§–û–†–ú–£ –ü–ò–°–¨–ú–ê
        showLetterForm.value = true;
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–µ –ø–æ–ª–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ DOM
        setTimeout(() => {
            const editable = document.getElementById('letterContentEditable');
            if (editable && formData.value.letter.content) {
                editable.innerHTML = formData.value.letter.content;
            }
        }, 100);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
        showNotification("–ü–∏—Å—å–º–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!");
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error);
        showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Å—å–º–æ: " + error.message, "error");
    } finally {
        if (loading) {
            setTimeout(() => loading.hide(), 300);
        }
    }
};

const deleteLetter = async (file) => {
    if (!confirm(`–£–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–æ "${file.name}"?`)) return;
    
    let loading = null;
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        loading = showDeleteLoading();
        await loadUserData();
        const basePath = '/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤';
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        const filePath = file.path 
            ? `${basePath}/${user.value.username}/${file.path}.json`
            : `${basePath}/${user.value.username}/${file.name}.json`;
            
        console.log("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ –ø—É—Ç–∏:", filePath);
        
        await dropbox.filesDeleteV2({ path: filePath });
        
        // –û–ë–ù–û–í–õ–Ø–ï–ú –î–ê–ù–ù–´–ï –°–†–ê–ó–£ –ü–û–°–õ–ï –£–î–ê–õ–ï–ù–ò–Ø
        await loadUserData();
        showNotification("–ü–∏—Å—å–º–æ —É–¥–∞–ª–µ–Ω–æ!");
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
        showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–æ: " + error.message, "error");
    } finally {
        if (loading) {
            setTimeout(() => loading.hide(), 300);
        }
    }
};

// –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∏—Å—å–º–∞ DOCX
const generateLetter = async (generatePdfFlag = false) => {
    let loading = null;
    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
        loading = showLetterLoading();

        // –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞
        let response;
        const templatePaths = [
            './letter-template.docx',
            'letter-template.docx',
            '/letter-template.docx'
        ];
        
        for (const path of templatePaths) {
            try {
                response = await fetch(path);
                if (response.ok) break;
            } catch (e) {
                continue;
            }
        }
        
        if (!response || !response.ok) {
            throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —à–∞–±–ª–æ–Ω –ø–∏—Å—å–º–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª letter-template.docx –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ, —á—Ç–æ –∏ index.html");
        }

        // –†–∞–±–æ—Ç–∞ —Å DOCX
        const zip = await JSZip.loadAsync(await response.arrayBuffer());
        const docXmlFile = zip.file("word/document.xml");
        if (!docXmlFile) {
            throw new Error("–í —à–∞–±–ª–æ–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª document.xml");
        }
        
        let docXml = await docXmlFile.async("text");

        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        const recipientsText = formData.value.letter.recipients
            .filter(r => r.position || r.organization || r.name)
            .map(r => {
                const firstLine = [r.position, r.organization].filter(Boolean).join(' ');
                return firstLine + (r.name ? `</w:t><w:br/><w:t>${r.name}` : '');
            })
            .join('</w:t><w:br/><w:t></w:t><w:br/><w:t>');

        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
        const formattedContent = formData.value.letter.content
            .split(/\r?\n/)
            .map(paragraph => paragraph || ' ')
            .join('</w:t></w:r></w:p><w:p><w:pPr><w:spacing w:before="0" w:after="0" w:line="300" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>');
        
        // –ó–∞–º–µ–Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
        const recipientsPattern = /(\<w:t[^>]*>)\[(\<\/w:t\>.*?\<w:t[^>]*>)RECIPIENTS_BLOCK(\<\/w:t\>.*?\<w:t[^>]*>)\](\<\/w:t\>)/gi;
        docXml = docXml.replace(recipientsPattern, `$1${recipientsText}$4`);
        
        const signLinePattern = /(\<w:t[^>]*>)\[(\<\/w:t\>.*?\<w:t[^>]*>)SIGN_LINE(\<\/w:t\>.*?\<w:t[^>]*>)\](\<\/w:t\>)/gi;
        docXml = docXml.replace(signLinePattern, formData.value.letter.senderName.trim() ? `$1________________$4` : `$1$4`);
        
        const replacements = {
            "[NUMBER]": formData.value.letter.number,
            "[DATE]": formatDate(formData.value.letter.date),
            "[OBJECT]": formData.value.letter.objectName,
            "[TITLE]": formData.value.letter.title,
"[CONTENT]": (() => {
    let content = formData.value.letter.content;
    
    // –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫
    content = content.replace(/<br\s*\/?>/gi, '</w:t></w:r></w:p><w:p><w:pPr><w:spacing w:before="0" w:after="0" w:line="300" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    const processFormatting = (html) => {
        // –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const boldRegex = /<b>(.*?)<\/b>/gi;
        const italicRegex = /<i>(.*?)<\/i>/gi;
        const underlineRegex = /<u>(.*?)<\/u>/gi;
        
        let result = html;
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
        result = result.replace(boldRegex, (match, text) => {
            return `</w:t></w:r><w:r><w:rPr><w:b/><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>${text}</w:t></w:r><w:r><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>`;
        });
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å–∏–≤
        result = result.replace(italicRegex, (match, text) => {
            return `</w:t></w:r><w:r><w:rPr><w:i/><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/></w:rPr><w:t>${text}</w:t></w:r><w:r><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>`;
        });
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç
        result = result.replace(underlineRegex, (match, text) => {
            return `</w:t></w:r><w:r><w:rPr><w:u w:val="single"/><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>${text}</w:t></w:r><w:r><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>`;
        });
        
        return result;
    };
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    content = processFormatting(content);
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è HTML —Ç–µ–≥–∏
    content = content.replace(/<\/?[^>]+>/g, '');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–±–∑–∞—Ü—ã
    const paragraphs = content.split(/\r?\n/).map(p => p || ' ');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π XML –¥–ª—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
    return paragraphs.join('</w:t></w:r></w:p><w:p><w:pPr><w:spacing w:before="0" w:after="0" w:line="300" w:lineRule="auto"/><w:jc w:val="both"/><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr></w:pPr><w:r><w:rPr><w:rFonts w:ascii="Times New Roman" w:hAnsi="Times New Roman"/><w:sz w:val="24"/><w:i/></w:rPr><w:t>');
})(),
            "[SENDER_POS]": formData.value.letter.senderPosition,
            "[SENDER_ORG]": formData.value.letter.senderOrganization,
            "[SIGN]": formData.value.letter.senderName
        };

        for (const [key, value] of Object.entries(replacements)) {
            docXml = docXml.replace(
                new RegExp(`(<w:t[^>]*>)([^<]*?)(${escapeRegExp(key)})([^<]*?)(</w:t>)`, "gi"),
                `$1$2${value}$4$5`
            );
        }

        zip.file("word/document.xml", docXml);

        // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        const docxBlob = await zip.generateAsync({ type: "blob" });
        const fileName = formData.value.letter.number 
        ? `–ü–∏—Å—å–º–æ_${formData.value.letter.number.replace(/\//g, '_')}.docx`
        : `–ü–∏—Å—å–º–æ_${new Date().toISOString().split('T')[0]}.docx`;
        
        const url = URL.createObjectURL(docxBlob);
        const a = document.createElement("a");
        a.href = url;
        a.download = fileName;
        document.body.appendChild(a);
        a.click();
        
        setTimeout(() => {
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        }, 100);

        // –í–û–ó–í–†–ê–©–ê–ï–ú –î–ê–ù–ù–´–ï –î–õ–Ø –°–û–•–†–ê–ù–ï–ù–ò–Ø
        return {
            success: true,
            fileName: fileName,
            blob: docxBlob,
            letterData: formData.value.letter
        };

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:", error);
        showNotification("–û—à–∏–±–∫–∞: " + error.message, "error");
        return { success: false, error: error.message };
    } finally {
        if (loading) {
            setTimeout(() => loading.hide(), 500);
        }
    }
};
// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –∑–∞–ø—Ä–æ—Å–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
const generateLetterWithSavePrompt = async (isPdf = false) => {
    try {
        // –°–Ω–∞—á–∞–ª–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∏—Å—å–º–æ
        const result = await generateLetter(isPdf);
        
        if (!result.success) {
            return; // –ï—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞, –≤—ã—Ö–æ–¥–∏–º
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤–æ–ø—Ä–æ—Å–æ–º –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
        const modal = new bootstrap.Modal(document.getElementById('saveAfterGenerateModal'));
        modal.show();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const skipSaveBtn = document.getElementById('skipSaveBtn');
        const confirmSaveBtn = document.getElementById('confirmSaveAfterGenerateBtn');
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        skipSaveBtn.onclick = null;
        confirmSaveBtn.onclick = null;
        
        // –ù–µ—Ç - –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ (–ø–∏—Å—å–º–æ —É–∂–µ —Å–∫–∞—á–∞–Ω–æ)
        skipSaveBtn.onclick = () => {
            modal.hide();
            showNotification("–ü–∏—Å—å–º–æ —Å–∫–∞—á–∞–Ω–æ!");
        };
        
        // –î–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        confirmSaveBtn.onclick = () => {
            modal.hide();
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            saveFileName.value = formData.value.letter.number 
                ? `–ü–∏—Å—å–º–æ_${formData.value.letter.number.replace(/\//g, '_')}`
                : '';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏
            const folderModal = new bootstrap.Modal(document.getElementById('folderModal'));
            folderModal.show();
            
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            setTimeout(() => {
                const input = document.getElementById('fileNameInput');
                if (input) input.focus();
            }, 300);
        };
        
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:", error);
        showNotification("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∏—Å—å–º–∞", "error");
    }
};

        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏
        const saveRecipientToDB = async () => {
            let loading = null;
            try {
                if (!newRecipient.value.name.trim()) {
                    showNotification("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è", "error");
                    return;
                }
                
                const isDuplicate = user.value.recipients.some(recipient => 
                    recipient.name.toLowerCase() === newRecipient.value.name.trim().toLowerCase() &&
                    recipient.organization.toLowerCase() === newRecipient.value.organization.trim().toLowerCase()
                );
                
                if (isDuplicate) {
                    showNotification("–¢–∞–∫–æ–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ", "error");
                    return;
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
                loading = showRecipientLoading();
                
                const newRecipientData = {
                    id: Date.now().toString(),
                    name: newRecipient.value.name.trim(),
                    position: newRecipient.value.position.trim(),
                    organization: newRecipient.value.organization.trim()
                };
                
                console.log("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è:", newRecipientData);
                
                const updatedRecipients = [...user.value.recipients, newRecipientData];
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Dropbox
                await saveRecipients(user.value.username, updatedRecipients);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                user.value.recipients = updatedRecipients;
                instantRefresh();
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                newRecipient.value = { name: '', position: '', organization: '' };
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = bootstrap.Modal.getInstance(document.getElementById('recipientModal'));
                if (modal) {
                    modal.hide();
                }
                
                showNotification("–ü–æ–ª—É—á–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
                
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è:", error);
                showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è: " + error.message, "error");
            } finally {
                if (loading) {
                    setTimeout(() => loading.hide(), 300);
                }
            }
        };

        const deleteRecipientFromDB = async (id) => {
            if (!confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã?")) return;
            try {
                const updatedRecipients = user.value.recipients.filter(r => r.id !== id);
                await saveRecipients(user.value.username, updatedRecipients);
                user.value.recipients = updatedRecipients;
                instantRefresh(); // –î–æ–±–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                showNotification("–ü–æ–ª—É—á–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω!");
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è:", error);
                showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è", "error");
            }
        };

        // Computed properties
        const filteredRecipients = computed(() => {
            const search = recipientSearch.value.toLowerCase();
            if (!user.value.recipients) return [];
            
            return user.value.recipients
                .filter(r => 
                    (r.name && r.name.toLowerCase().includes(search)) || 
                    (r.organization && r.organization.toLowerCase().includes(search))
                )
                .sort((a, b) => {
                    const getLastName = (name) => (name || '').split(' ')[0] || '';
                    return getLastName(a.name).localeCompare(getLastName(b.name));
                });
        });

        // Watchers
        watch(() => user.value.username, (newUsername) => {
            if (newUsername) {
                loadUserData();
            }
        });

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∫–ª–∞–¥–æ–∫
onMounted(() => {
    const savedUsername = localStorage.getItem('dbx_username');
    if (savedUsername) {
        user.value.username = savedUsername;
        loadUserData();
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å –ø–∞–ø–∫–∞–º–∏
    document.addEventListener('show.bs.tab', function (event) {
        if (event.target.id === 'letter-form-tab' && user.value.username) {
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
            setTimeout(() => {
                loadUserData();
            }, 100);
        }
    });
});

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
const forceRefresh = async () => {
    if (user.value.username) {
        console.log("üîÑ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...");
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
        const loading = showRefreshLoading();
        
        try {
            // –û—á–∏—â–∞–µ–º –∫—ç—à
            folderCache.clear();
            filesCache.clear();
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            await loadUserData();
            showNotification("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", error);
            showNotification("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", "error");
        } finally {
            // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
            setTimeout(() => {
                loading.hide();
            }, 500);
        }
    }
};

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ - –ü–†–û–°–¢–ê–Ø –í–ï–†–°–ò–Ø
const createSubFolder = async (parentPath = '') => {
    if (!user.value.username) {
        alert("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É");
        return;
    }
    
    const folderName = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏:");
    if (!folderName?.trim()) return;
    
    const safeName = folderName.trim().replace(/[<>:"|?*]/g, "").replace(/\s+/g, " ");
    if (!safeName) {
        alert("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–∞–ø–∫–∏");
        return;
    }
    
    let loading = null;
    try {
        loading = showFolderCreationLoading();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        const currentFolders = await loadFoldersFromJSON(user.value.username);
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É
        const newFolder = {
            id: 'folder_' + Date.now(),
            name: safeName,
            path: parentPath ? `${parentPath}/${safeName}` : safeName,
            parentPath: parentPath || '',
            created: new Date().toISOString(),
            children: [],
            files: [],
            filesCount: 0
        };
        
        console.log("üÜï –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É:", newFolder);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º
        if (!parentPath) {
            currentFolders.push(newFolder);
        } else {
            // –ò—â–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
            const findAndAdd = (folders, targetPath, folderToAdd) => {
                for (let folder of folders) {
                    if (folder.path === targetPath) {
                        folder.children.push(folderToAdd);
                        return true;
                    }
                    if (folder.children && folder.children.length > 0) {
                        if (findAndAdd(folder.children, targetPath, folderToAdd)) {
                            return true;
                        }
                    }
                }
                return false;
            };
            
            if (!findAndAdd(currentFolders, parentPath, newFolder)) {
                throw new Error("–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
            }
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        await saveFoldersToJSON(user.value.username, currentFolders);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        await loadUserData();
        
        showNotification(`–ü–∞–ø–∫–∞ "${safeName}" —Å–æ–∑–¥–∞–Ω–∞!`);
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏:", error);
        showNotification("–û—à–∏–±–∫–∞: " + error.message, "error");
    } finally {
        if (loading) {
            setTimeout(() => loading.hide(), 300);
        }
    }
};

// –ü—Ä—è–º–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–∏—Å—å–º–∞
const confirmSaveDirect = async () => {
    let loading = null;
    try {
        if (!user.value.username) {
            alert("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É");
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —Ñ–∞–π–ª
        if (!currentEditingFile.value) {
            alert("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —Ñ–∞–π–ª");
            return;
        }

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å –∏ –∏–º—è –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
        const basePath = '/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤';
        const fullPath = `${basePath}/${user.value.username}/${currentEditingFile.value.path}.json`;

        console.log("üíæ –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –ø–∏—Å—å–º–∞ –ø–æ –ø—É—Ç–∏:", fullPath);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        loading = showSaveLoading();

        await dropbox.filesUpload({
            path: fullPath,
            contents: JSON.stringify(formData.value.letter),
            mode: { '.tag': 'overwrite' },
            mute: true
        });
        
        // –û–ë–ù–û–í–õ–Ø–ï–ú –î–ê–ù–ù–´–ï –°–†–ê–ó–£ –ü–û–°–õ–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø
        await loadUserData();
        instantRefresh();
        showNotification("–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!");
        
        // –°–ö–†–´–í–ê–ï–ú –§–û–†–ú–£ –ü–û–°–õ–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø
        showLetterForm.value = false;
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        isEditingExistingFile.value = false;
        currentEditingFile.value = null;
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", error);
        showNotification("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∏—Å—å–º–æ: " + error.message, "error");
    } finally {
        if (loading) {
            setTimeout(() => loading.hide(), 300);
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
        const modal = bootstrap.Modal.getInstance(document.getElementById('folderModal'));
        if (modal) {
            modal.hide();
        }
    }
};

const confirmSave = async () => {
    let loading = null;
    try {
        if (!user.value.username) {
            alert("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É");
            return;
        }

        if (!saveFileName.value.trim()) {
            alert("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–∏—Å—å–º–∞");
            return;
        }

        loading = showSaveLoading();

        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        const fileName = saveFileName.value.trim().replace(/\//g, '_');
        const basePath = '/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤';
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        let filePath;
        if (selectedFolderPath.value) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
            filePath = `${basePath}/${user.value.username}/${selectedFolderPath.value}/${fileName}.json`;
        } else {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ—Ä–Ω–µ
            filePath = `${basePath}/${user.value.username}/${fileName}.json`;
        }

        console.log("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∏—Å—å–º–∞:", filePath);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Dropbox
        await dropbox.filesUpload({
            path: filePath,
            contents: JSON.stringify(formData.value.letter),
            mode: { '.tag': 'overwrite' },
            mute: true
        });
        
        // –ê–ù–ò–ú–ê–¶–ò–Ø: –Ω–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –ø–∞–ø–∫–∏ –∏ —Å–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        if (selectedFolderPath.value) {
            const folderPath = selectedFolderPath.value;
            const folderName = folderPath.split('/').pop() || folderPath;
            
            // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –ø–∞–ø–∫–∏ –≤ –¥–µ—Ä–µ–≤–µ
            const folderElements = document.querySelectorAll('.folder-name');
            let targetFolderElement = null;
            
            for (let element of folderElements) {
                if (element.textContent.includes(folderName)) {
                    targetFolderElement = element;
                    break;
                }
            }
            
            // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–∏—Å—å–º–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
            const tempLetterElement = document.createElement('div');
            tempLetterElement.innerHTML = 'üìÑ';
            tempLetterElement.style.position = 'fixed';
            tempLetterElement.style.left = '50%';
            tempLetterElement.style.top = '50%';
            tempLetterElement.style.fontSize = '24px';
            tempLetterElement.style.zIndex = '10000';
            document.body.appendChild(tempLetterElement);
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–∞–ø–∫—É
            if (targetFolderElement) {
                await animateLetterToFolder(targetFolderElement, tempLetterElement);
            }
            
            // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            document.body.removeChild(tempLetterElement);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        await loadUserData();
        
        showNotification("–ü–∏—Å—å–º–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π! ‚ú®");
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        showLetterForm.value = false;
        selectedFolderPath.value = null;
        saveFileName.value = '';
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", error);
        showNotification("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: " + error.message, "error");
    } finally {
        if (loading) {
            setTimeout(() => loading.hide(), 300);
        }
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
const selectFolderForSave = function(path) {
    // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞–ø–∫—É - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    if (selectedFolderPath.value === path) {
        selectedFolderPath.value = null;
    } else {
        selectedFolderPath.value = path === '' ? null : path;
    }
};
// –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏)
const instantRefresh = async () => {
    if (user.value.username) {
        console.log("‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...");
        
        try {
            // –û—á–∏—â–∞–µ–º –∫—ç—à
            folderCache.clear();
            filesCache.clear();
            
            // –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
            await loadUserData();
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Vue - –£–ë–ò–†–ê–ï–ú –æ—à–∏–±–æ—á–Ω—ã–π –≤—ã–∑–æ–≤
            // await app.config.globalProperties.$forceUpdate();
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", error);
        }
    }
};
// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ Dropbox
const forceRefreshFromDropbox = async () => {
    if (!user.value.username) return;
    
    console.log("üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ó DROPBOX");
    const loading = showRefreshLoading();
    
    try {
        // –ü–û–õ–ù–û–°–¢–¨–Æ –æ—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏
        folderCache.clear();
        filesCache.clear();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
        await loadUserData();
        
        showNotification("–î–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ Dropbox!");
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", error);
        showNotification("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", "error");
    } finally {
        setTimeout(() => loading.hide(), 500);
    }
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫ –∏–∑ JSON
const loadFoldersFromJSON = async (username) => {
    if (!username) {
        return [];
    }
    
    return await safeDropboxRequest(async () => {
        const filePath = `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/${FOLDERS_STRUCTURE_FILE}`;
        console.log("üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–∑:", filePath);
        
        const response = await dropbox.filesDownload({ path: filePath });
        
        let content;
        if (response.result && response.result.fileBlob) {
            content = await response.result.fileBlob.text();
        } else if (response.fileBlob) {
            content = await response.fileBlob.text();
        } else {
            throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Dropbox");
        }
        
        const structure = JSON.parse(content);
        console.log("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –ø–∞–ø–æ–∫:", structure.folders?.length || 0);
        return structure.folders || [];
        
    }).catch(error => {
        if (error.status === 409) {
            console.log("üìÅ –§–∞–π–ª —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π");
            // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            const defaultStructure = {
                version: "1.0",
                lastUpdated: new Date().toISOString(),
                folders: []
            };
            
            return safeDropboxRequest(async () => {
                await dropbox.filesUpload({
                    path: `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/${FOLDERS_STRUCTURE_FILE}`,
                    contents: JSON.stringify(defaultStructure, null, 2),
                    mode: { '.tag': 'overwrite' },
                    mute: true
                });
                return [];
            });
        }
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:", error);
        return [];
    });
};

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
const saveFoldersToJSON = async (username, folders) => {
    if (!ensureDropboxInitialized()) return;
    
    try {
        const filePath = `/–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/${username}/${FOLDERS_STRUCTURE_FILE}`;
        const structure = {
            version: "1.0",
            lastUpdated: new Date().toISOString(),
            folders: folders
        };
        
        await dropbox.filesUpload({
            path: filePath,
            contents: JSON.stringify(structure, null, 2),
            mode: { '.tag': 'overwrite' },
            mute: true
        });
        
        console.log("üíæ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –ø–∞–ø–æ–∫:", folders.length);
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:", error);
        throw error;
    }
};

return {
    user,
    recipientSearch,
    newRecipient,
    selectedFolderPath,
    formData,
    filteredRecipients,
    showLetterForm,
    forceRefresh,
    createSubFolder,
    showSuccessNotification,
    showErrorNotification,
    notificationMessage,
    isLoadingRecipients,
    saveFileName,
    isEditingExistingFile,
    currentEditingFile,
    forceRefreshFromDropbox,
    // –°–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    senderProfileForm,
    
    // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
    isSenderLocked: computed(() => {
        return user.value.senderProfile?.isLocked || false;
    }),
    hasSenderData: computed(() => {
        return user.value.senderProfile && (
            user.value.senderProfile.senderPosition || 
            user.value.senderProfile.senderOrganization || 
            user.value.senderProfile.senderName
        );
    }),
    
    // Methods
    login,
    logout,
    createFolder,
    deleteFolder,
    changeFolder,
    loadLetter,
    deleteLetter,
    generateLetter,
    generateLetterWithSavePrompt,
    saveRecipient: saveRecipientToDB,
    deleteRecipient: deleteRecipientFromDB,
    showNotification,
    saveRecipientToDB,
    confirmSaveDirect,
    confirmSave,
    selectFolderForSave,
    
    // –ú–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    saveSenderProfile: async () => {
        let loading = null;
        try {
            loading = showLoading("–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å...", "mini");
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ Dropbox
            await saveSenderProfile(user.value.username, senderProfileForm.value);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
            user.value.senderProfile = { ...senderProfileForm.value };
            
            // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—É—â–µ–º –ø–∏—Å—å–º–µ
            if (senderProfileForm.value.isLocked && showLetterForm.value) {
                formData.value.letter.senderPosition = senderProfileForm.value.senderPosition;
                formData.value.letter.senderOrganization = senderProfileForm.value.senderOrganization;
                formData.value.letter.senderName = senderProfileForm.value.senderName;
            }
            
            showNotification("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
            
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", error);
            showNotification("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", "error");
        } finally {
            if (loading) {
                setTimeout(() => loading.hide(), 300);
            }
        }
    },
    
    loadSenderProfileData: () => {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ñ–æ—Ä–º—É
        if (user.value.senderProfile) {
            senderProfileForm.value = { ...user.value.senderProfile };
            showNotification("üì• –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ —Ñ–æ—Ä–º—É");
        } else {
            showNotification("‚ÑπÔ∏è –ü—Ä–æ—Ñ–∏–ª—å –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω", "error");
        }
    },
    
    openSenderProfileModal: () => {
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        if (user.value.senderProfile) {
            senderProfileForm.value = { ...user.value.senderProfile };
        }
        showSenderProfileModal.value = true;
    },
    
    closeSenderProfileModal: () => {
        showSenderProfileModal.value = false;
    },
    addRecipient: () => {
        formData.value.letter.recipients.push({
            position: "",
            organization: "",
            name: ""
        });
    },
    
    removeRecipient: (index) => {
        formData.value.letter.recipients.splice(index, 1);
    },
    // –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
updateContent(event) {
    formData.value.letter.content = event.target.innerHTML;
},

saveSelection() {
    const editable = document.getElementById('letterContentEditable');
    if (!editable) return;
    
    const selection = window.getSelection();
    if (selection.rangeCount > 0) {
        formData.value.currentSelection = selection.getRangeAt(0);
    }
},

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
formatText(type) {
    const editable = document.getElementById('letterContentEditable');
    if (!editable) return;
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
    const selection = window.getSelection();
    if (formData.value.currentSelection) {
        selection.removeAllRanges();
        selection.addRange(formData.value.currentSelection);
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
    if (selection.toString().length === 0) {
        showNotification("–í—ã–¥–µ–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", "error");
        return;
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    document.execCommand(type, false, null);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    formData.value.letter.content = editable.innerHTML;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ
    this.saveSelection();
    
    // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ editable div
    editable.focus();
},

// –ú–µ—Ç–æ–¥ –æ—á–∏—Å—Ç–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
clearFormatting() {
    const editable = document.getElementById('letterContentEditable');
    if (!editable) return;
    
    const selection = window.getSelection();
    if (formData.value.currentSelection) {
        selection.removeAllRanges();
        selection.addRange(formData.value.currentSelection);
    }
    
    if (selection.toString().length === 0) {
        showNotification("–í—ã–¥–µ–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", "error");
        return;
    }
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    document.execCommand('removeFormat', false, null);
    document.execCommand('unlink', false, null); // –£–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    formData.value.letter.content = editable.innerHTML;
    this.saveSelection();
    editable.focus();
},

// –ú–µ—Ç–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∏—Å—å–º–∞
initEditableContent() {
    const editable = document.getElementById('letterContentEditable');
    if (editable && formData.value.letter.content) {
        editable.innerHTML = formData.value.letter.content;
    }
},
    
    addToLetter: (recipient) => {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –µ—Å–ª–∏ –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        const senderData = user.value.senderProfile?.isLocked ? {
            senderPosition: user.value.senderProfile.senderPosition || "",
            senderOrganization: user.value.senderProfile.senderOrganization || "",
            senderName: user.value.senderProfile.senderName || ""
        } : {
            senderPosition: "",
            senderOrganization: "", 
            senderName: ""
        };
        
        // –ü–†–û–í–ï–†–Ø–ï–ú, –û–¢–ö–†–´–¢–ê –õ–ò –§–û–†–ú–ê –ü–ò–°–¨–ú–ê
        if (!showLetterForm.value) {
            showNotification("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!", "error");
            
            // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ
            if (confirm("–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ?")) {
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
                formData.value.letter = {
                    number: "",
                    date: new Date().toISOString().split('T')[0],
                    recipients: [{ 
                        position: recipient.position,
                        organization: recipient.organization,
                        name: recipient.name
                    }],
                    objectName: "",
                    title: "",
                    content: "",
                    ...senderData  // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
                };
                formData.value.currentFileId = null;
                isEditingExistingFile.value = false;
                currentEditingFile.value = null;
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                showLetterForm.value = true;
                
                // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Ñ–æ—Ä–º—ã
                const tabEl = document.querySelector('a[href="#letter-form"]');
                if (tabEl) {
                    const tab = new bootstrap.Tab(tabEl);
                    tab.show();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª—å
                const hasData = user.value.senderProfile && (
                    user.value.senderProfile.senderPosition || 
                    user.value.senderProfile.senderOrganization || 
                    user.value.senderProfile.senderName
                );
                
                if (user.value.senderProfile?.isLocked && hasData) {
                    showNotification("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫!");
                }
            }
            return;
        }
        
        // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –æ—Ç–∫—Ä—ã—Ç–∞, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        formData.value.letter.recipients.push({
            name: recipient.name,
            position: recipient.position,
            organization: recipient.organization
        });
        
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å —Ñ–æ—Ä–º–æ–π
        const tabEl = document.querySelector('a[href="#letter-form"]');
        if (tabEl) {
            const tab = new bootstrap.Tab(tabEl);
            tab.show();
        }
        
        showNotification("–ü–æ–ª—É—á–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–∏—Å—å–º–æ!");
    },
    
    showAddRecipientModal: () => {
        newRecipient.value = { name: '', position: '', organization: '' };
        const modal = new bootstrap.Modal(document.getElementById('recipientModal'));
        modal.show();
    },
    
    onRecipientModalClose: () => {
        newRecipient.value = { name: '', position: '', organization: '' };
    },
    
    createNewLetter: () => {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –µ—Å–ª–∏ –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        const senderData = user.value.senderProfile?.isLocked ? {
            senderPosition: user.value.senderProfile.senderPosition || "",
            senderOrganization: user.value.senderProfile.senderOrganization || "",
            senderName: user.value.senderProfile.senderName || ""
        } : {
            senderPosition: "",
            senderOrganization: "", 
            senderName: ""
        };
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        formData.value.letter = {
            number: "",
            date: new Date().toISOString().split('T')[0],
            recipients: [{ position: "", organization: "", name: "" }],
            objectName: "",
            title: "",
            content: "",
            ...senderData
        };
        formData.value.currentFileId = null;
        isEditingExistingFile.value = false;
        currentEditingFile.value = null;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        showLetterForm.value = true;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–µ –ø–æ–ª–µ (–î–û–ë–ê–í–¨–¢–ï –≠–¢–£ –°–¢–†–û–ß–ö–£)
setTimeout(() => {
    const editable = document.getElementById('letterContentEditable');
    if (editable) {
        editable.innerHTML = formData.value.letter.content || '';
    }
}, 100);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª—å
        const hasData = user.value.senderProfile && (
            user.value.senderProfile.senderPosition || 
            user.value.senderProfile.senderOrganization || 
            user.value.senderProfile.senderName
        );
        
        if (user.value.senderProfile?.isLocked && hasData) {
            showNotification("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫!");
        }
    },

    closeLetterForm: () => {
        if (confirm("–ó–∞–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É? –ù–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.")) {
            showLetterForm.value = false;
        }
    },
    
    saveToFolder: async () => {
        // –ï—Å–ª–∏ –º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø–∏—Å—å–º–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ä–∞–∑—É –±–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        if (isEditingExistingFile.value && currentEditingFile.value) {
            await confirmSaveDirect();
            return;
        }
        
        // –î–ª—è –Ω–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        saveFileName.value = formData.value.letter.number 
            ? `–ü–∏—Å—å–º–æ_${formData.value.letter.number.replace(/\//g, '_')}`
            : '';
        
        const modal = new bootstrap.Modal(document.getElementById('folderModal'));
        modal.show();
        
        // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        setTimeout(() => {
            const input = document.getElementById('fileNameInput');
            if (input) input.focus();
        }, 300);
    }
};
    }
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.config.errorHandler = (err, vm, info) => {
    console.error('–û—à–∏–±–∫–∞ Vue:', err, info);
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –ø–∞–ø–æ–∫ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô
app.component('folder-context-menu', {
    template: `
        <div class="context-menu" :style="menuStyle" v-if="showMenu" v-click-outside="closeMenu">
            <button class="context-menu-item" @click="createSubFolder">
                <span class="me-2">üìÅ</span>
                –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∞–ø–∫—É
            </button>
            
            <div class="context-menu-divider"></div>
            
            <button class="context-menu-item danger" @click="deleteFolder">
                <span class="me-2">üóëÔ∏è</span>
                –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É
            </button>
        </div>
    `,
    props: {
        showMenu: Boolean,
        position: Object,
        folderPath: String
    },
    computed: {
        menuStyle() {
            return {
                left: this.position.x + 'px',
                top: this.position.y + 'px',
                position: 'fixed',
                'z-index': 9999
            };
        }
    },
    methods: {
        createSubFolder() {
            this.$emit('create-folder', this.folderPath);
            this.closeMenu();
        },
        
        deleteFolder() {
            this.$emit('delete-folder', this.folderPath);
            this.closeMenu();
        },
        
        closeMenu() {
            this.$emit('close-menu');
        }
    }
});

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Ñ–∞–π–ª–æ–≤ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô
app.component('file-context-menu', {
    template: `
        <div class="context-menu" :style="menuStyle" v-if="showMenu" v-click-outside="closeMenu">
            <button class="context-menu-item" @click="editFile">
                <span class="me-2">‚úèÔ∏è</span>
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </button>
            
            <div class="context-menu-divider"></div>
            
            <button class="context-menu-item danger" @click="deleteFile">
                <span class="me-2">üóëÔ∏è</span>
                –£–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–æ
            </button>
        </div>
    `,
    props: {
        showMenu: Boolean,
        position: Object,
        file: Object
    },
    computed: {
        menuStyle() {
            return {
                left: this.position.x + 'px',
                top: this.position.y + 'px',
                position: 'fixed',
                'z-index': 9999
            };
        }
    },
    methods: {
        editFile() {
            this.$emit('edit-file', this.file);
            this.closeMenu();
        },
        
        deleteFile() {
            this.$emit('delete-file', this.file);
            this.closeMenu();
        },
        
        closeMenu() {
            this.$emit('close-menu');
        }
    }
});

// –î–∏—Ä–µ–∫—Ç–∏–≤–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø
app.directive('click-outside', {
    beforeMount(el, binding) {
        el.clickOutsideEvent = function(event) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –≤–Ω–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if (!(el === event.target || el.contains(event.target))) {
                binding.value(event);
            }
        };
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º capture phase —á—Ç–æ–±—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å –∫–ª–∏–∫ —Ä–∞–Ω—å—à–µ –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        document.addEventListener('click', el.clickOutsideEvent, true);
        document.addEventListener('contextmenu', el.clickOutsideEvent, true);
    },
    unmounted(el) {
        document.removeEventListener('click', el.clickOutsideEvent, true);
        document.removeEventListener('contextmenu', el.clickOutsideEvent, true);
    }
});

// –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–∞–ø–∫–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω—é - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô
app.component('folder-item', {
    template: `
        <div class="folder-item">
            <div class="d-flex align-items-center position-relative">
                <!-- –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è/—Å–∫—Ä—ã—Ç–∏—è -->
                <span @click="toggle" class="toggle-icon me-2" style="cursor: pointer; width: 20px; text-align: center;">
                    <span v-if="hasChildren || folder.filesCount > 0">
                        {{ isOpen ? '‚ñº' : '‚ñ∫' }}
                    </span>
                    <span v-else>‚Ä¢</span>
                </span>
                
                <!-- –ò–∫–æ–Ω–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ -->
                <span @click.stop="selectFolder" class="folder-name d-flex align-items-center" 
                      style="cursor: pointer; flex-grow: 1; padding: 4px 8px; border-radius: 4px;"
                      :class="{ 'selected-folder': isSelected }">
                    
                    <span class="folder-icon me-2">
                        {{ hasFiles ? 'üìÅ' : 'üìÇ' }}
                    </span>
                    
                    <span class="fw-medium">{{ safeFolderName }}</span>
                    
                    <!-- –ë–µ–π–¥–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ñ–∞–π–ª–æ–≤ -->
                    <span v-if="folder.filesCount > 0" class="files-badge ms-2">
                        {{ folder.filesCount }}
                    </span>
                </span>
                
                <!-- –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é -->
                <button @click.stop="toggleFolderContextMenu($event)" 
                        class="context-menu-btn ms-2" 
                        title="–î–µ–π—Å—Ç–≤–∏—è"
                        style="opacity: 0.4; transition: opacity 0.2s ease;">
                    ‚ãÆ
                </button>
            </div>
            
            <!-- –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–∞–ø–∫–∏ -->
            <folder-context-menu
                v-if="showFolderContextMenu"
                :show-menu="showFolderContextMenu"
                :position="folderContextMenuPosition"
                :folder-path="folder.path"
                @create-folder="handleCreateSubFolder"
                @delete-folder="handleDeleteFolder"
                @close-menu="closeFolderContextMenu">
            </folder-context-menu>
            
            <!-- –í–ª–æ–∂–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã) -->
            <div v-if="isOpen" class="folder-children ms-4 mt-1">
                <!-- –ü–æ–¥–ø–∞–ø–∫–∏ -->
                <folder-item
                    v-for="child in folder.children"
                    :key="'folder-' + child.path"
                    :folder="child"
                    :current-path="currentPath"
                    :username="username"
                    @change-folder="$emit('change-folder', $event)"
                    @create-folder="$emit('create-folder', $event)"
                    @delete-folder="$emit('delete-folder', $event)"
                    @load-letter="$emit('load-letter', $event)"
                    @delete-letter="$emit('delete-letter', $event)">
                </folder-item>
                
                <!-- –ü–∏—Å—å–º–∞ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ -->
                <div v-if="isOpen && folder.files && folder.files.length > 0" class="files-section">
                    <div v-for="file in folder.files" :key="'file-' + file.id" 
                         class="file-item d-flex align-items-center ps-3 py-1 position-relative">
                        <span @click="loadLetter(file)" class="d-flex align-items-center" 
                              style="cursor: pointer; flex-grow: 1; padding: 4px 8px; border-radius: 4px;">
                            <span class="me-2">üìÑ</span>
                            <span class="file-name">{{ file.name }}</span>
                        </span>
                        
                        <!-- –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Ñ–∞–π–ª–∞ -->
                        <button @click.stop="toggleFileContextMenu(file, $event)" 
                                class="context-menu-btn ms-2" 
                                title="–î–µ–π—Å—Ç–≤–∏—è —Å –ø–∏—Å—å–º–æ–º"
                                style="opacity: 0.4; transition: opacity 0.2s ease;">
                            ‚ãÆ
                        </button>
                    </div>
                </div>
                
                <!-- –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞ -->
                <div v-if="!hasChildren && (!folder.files || folder.files.length === 0)" class="text-muted ps-3 py-1">
                    <small>–ü–∞–ø–∫–∞ –ø—É—Å—Ç–∞</small>
                </div>
            </div>
            
            <!-- –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ñ–∞–π–ª–∞ -->
            <file-context-menu
                v-if="showFileContextMenu"
                :show-menu="showFileContextMenu"
                :position="fileContextMenuPosition"
                :file="currentFileContext"
                @edit-file="handleEditFile"
                @delete-file="handleDeleteFile"
                @close-menu="closeFileContextMenu">
            </file-context-menu>
        </div>
    `,
    props: {
        folder: {
            type: Object,
            required: true
        },
        currentPath: {
            type: String,
            default: ''
        },
        username: {
            type: String,
            default: ''
        }
    },
    data() {
        return {
            isOpen: false,
            showFolderContextMenu: false,
            showFileContextMenu: false,
            folderContextMenuPosition: { x: 0, y: 0 },
            fileContextMenuPosition: { x: 0, y: 0 },
            currentFileContext: null
        };
    },
    computed: {
        hasChildren() {
            return this.folder.children && 
                   Array.isArray(this.folder.children) && 
                   this.folder.children.length > 0;
        },
        safeFolderName() {
            return this.folder.name || '–ë–µ–∑ –∏–º–µ–Ω–∏';
        },
        isSelected() {
            return this.currentPath === this.folder.path;
        },
        hasFiles() {
            return this.folder.filesCount > 0 || (this.folder.files && this.folder.files.length > 0);
        }
    },
    methods: {
        toggle() {
            this.isOpen = !this.isOpen;
            this.closeAllContextMenus();
        },
        
        selectFolder() {
            console.log("üìÅ –í—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞:", this.folder.path);
            this.$emit('change-folder', this.folder.path);
            this.closeAllContextMenus();
        },
        
        loadLetter(file) {
            this.$emit('load-letter', file);
        },
        
        deleteLetter(file) {
            if (confirm(`–£–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–æ "${file.name}"?`)) {
                this.$emit('delete-letter', file);
            }
        },
        
        // –ú–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –ø–∞–ø–∫–∏
        toggleFolderContextMenu(event) {
            console.log("üü° –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –ø–∞–ø–∫–∏ –≤—ã–∑–≤–∞–Ω–æ –¥–ª—è:", this.folder.name);
            event.stopPropagation();
            event.preventDefault();
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –º–µ–Ω—é –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ
            this.closeAllContextMenus();
            this.showFolderContextMenu = true;
            
            // –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—é
            const rect = event.currentTarget.getBoundingClientRect();
            this.folderContextMenuPosition = {
                x: rect.left,
                y: rect.bottom + 5
            };
        },
        
        handleCreateSubFolder() {
            console.log("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∞–ø–∫–∏ –≤:", this.folder.path);
            this.$emit('create-folder', this.folder.path);
            this.closeFolderContextMenu();
        },
        
        handleDeleteFolder() {
            console.log("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–ø–∫–∏:", this.folder.path);
            this.$emit('delete-folder', this.folder.path);
            this.closeFolderContextMenu();
        },
        
        closeFolderContextMenu() {
            this.showFolderContextMenu = false;
        },
        
        // –ú–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é —Ñ–∞–π–ª–∞
        toggleFileContextMenu(file, event) {
            console.log("üü° –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é —Ñ–∞–π–ª–∞ –≤—ã–∑–≤–∞–Ω–æ –¥–ª—è:", file.name);
            event.stopPropagation();
            event.preventDefault();
            
            this.closeAllContextMenus();
            this.currentFileContext = file;
            this.showFileContextMenu = true;
            
            const rect = event.currentTarget.getBoundingClientRect();
            this.fileContextMenuPosition = {
                x: rect.left,
                y: rect.bottom + 5
            };
        },
        
        handleEditFile(file) {
            console.log("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞:", file.name);
            this.loadLetter(file);
            this.closeFileContextMenu();
        },
        
        handleDeleteFile(file) {
            console.log("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞:", file.name);
            this.deleteLetter(file);
            this.closeFileContextMenu();
        },
        
        closeFileContextMenu() {
            this.showFileContextMenu = false;
            this.currentFileContext = null;
        },
        
        closeAllContextMenus() {
            this.closeFolderContextMenu();
            this.closeFileContextMenu();
        }
    },
    mounted() {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
        if (this.isSelected) {
            this.isOpen = true;
        }
    }
});
// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–∞–ø–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø—É—Ç–∏ (–ø–∏—Å—å–º–∞ –Ω–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã)
app.component('folder-item-modal', {
    template: `
        <div class="folder-item">
            <div class="d-flex align-items-center position-relative">
                <!-- –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è/—Å–∫—Ä—ã—Ç–∏—è -->
                <span @click="toggle" class="toggle-icon me-2" style="cursor: pointer; width: 20px; text-align: center;">
                    <span v-if="hasChildren || folder.filesCount > 0">
                        {{ isOpen ? '‚ñº' : '‚ñ∫' }}
                    </span>
                    <span v-else>‚Ä¢</span>
                </span>
                
                <!-- –ò–∫–æ–Ω–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ -->
                <span @click.stop="selectFolder" class="folder-name d-flex align-items-center" 
                      style="cursor: pointer; flex-grow: 1; padding: 4px 8px; border-radius: 4px;"
                      :class="{ 'selected-folder': isSelected }">
                    
                    <span class="folder-icon me-2">
                        {{ hasFiles ? 'üìÅ' : 'üìÇ' }}
                    </span>
                    
                    <span class="fw-medium">{{ safeFolderName }}</span>
                    
                    <!-- –ë–µ–π–¥–∂ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ñ–∞–π–ª–æ–≤ -->
                    <span v-if="folder.filesCount > 0" class="files-badge ms-2">
                        {{ folder.filesCount }}
                    </span>
                </span>
            </div>
            
            <!-- –í–ª–æ–∂–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã) -->
            <div v-if="isOpen" class="folder-children ms-4 mt-1">
                <!-- –ü–æ–¥–ø–∞–ø–∫–∏ -->
                <folder-item-modal
                    v-for="child in folder.children"
                    :key="'folder-modal-' + child.path"
                    :folder="child"
                    :current-path="currentPath"
                    @change-folder="$emit('change-folder', $event)">
                </folder-item-modal>
                
                <!-- –ü–∏—Å—å–º–∞ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ (–ù–ï –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ) -->
                <div v-if="isOpen && folder.files && folder.files.length > 0" class="files-section">
                    <div v-for="file in folder.files" :key="'file-modal-' + file.id" 
                         class="file-item d-flex align-items-center ps-3 py-1">
                        <span class="d-flex align-items-center text-muted" 
                              style="flex-grow: 1; padding: 4px 8px; border-radius: 4px;"
                              title="–í —Ä–µ–∂–∏–º–µ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ –ø–∏—Å—å–º–∞ –Ω–µ–ª—å–∑—è –æ—Ç–∫—Ä—ã–≤–∞—Ç—å">
                            <span class="me-2">üìÑ</span>
                            <span class="file-name" style="opacity: 0.7;">{{ file.name }}</span>
                        </span>
                    </div>
                </div>
                
                <!-- –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞ -->
                <div v-if="!hasChildren && (!folder.files || folder.files.length === 0)" class="text-muted ps-3 py-1">
                    <small>–ü–∞–ø–∫–∞ –ø—É—Å—Ç–∞</small>
                </div>
            </div>
        </div>
    `,
    props: {
        folder: {
            type: Object,
            required: true
        },
        currentPath: {
            type: String,
            default: ''
        }
    },
    data() {
        return {
            isOpen: false
        };
    },
    computed: {
        hasChildren() {
            return this.folder.children && 
                   Array.isArray(this.folder.children) && 
                   this.folder.children.length > 0;
        },
        safeFolderName() {
            return this.folder.name || '–ë–µ–∑ –∏–º–µ–Ω–∏';
        },
        isSelected() {
            return this.currentPath === this.folder.path;
        },
        hasFiles() {
            return this.folder.filesCount > 0 || (this.folder.files && this.folder.files.length > 0);
        }
    },
    methods: {
        toggle() {
            this.isOpen = !this.isOpen;
        },
        
        selectFolder() {
            console.log("üìÅ –í—ã–±—Ä–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", this.folder.path);
            this.$emit('change-folder', this.folder.path);
        }
    },
    mounted() {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
        if (this.isSelected) {
            this.isOpen = true;
        }
    }
});


// –ú–æ–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app.mount("#app");